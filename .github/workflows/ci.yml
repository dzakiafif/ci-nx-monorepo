name: Build Affected Apps with Matrix

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      affected-apps: ${{ steps.affected.outputs.apps }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Get affected apps
        id: affected
        run: |
          # Get affected apps and format as JSON array
          AFFECTED_APPS=$(pnpm nx print-affected --target=build --select=projects --type=app | jq -R -s -c 'split("\n")[:-1]')
          echo "apps=$AFFECTED_APPS" >> $GITHUB_OUTPUT
          echo "Affected apps: $AFFECTED_APPS"

  build:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.affected-apps != '[]'
    strategy:
      matrix:
        app: ${{ fromJson(needs.detect-changes.outputs.affected-apps) }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Build ${{ matrix.app }}
        run: pnpm nx build ${{ matrix.app }}
      
      - name: Test ${{ matrix.app }}
        run: pnpm nx test ${{ matrix.app }}
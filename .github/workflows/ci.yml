name: Build Affected Apps with Matrix

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      affected-apps: ${{ steps.affected.outputs.apps }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: |
          if ! pnpm install --frozen-lockfile; then
            echo "Frozen lockfile failed, installing with updated lockfile..."
            pnpm install --no-frozen-lockfile
          fi
      
      - name: Get affected apps
        id: affected
        run: |
          # Get affected apps and format as JSON array
          AFFECTED_APPS=$(pnpm nx show projects --affected --type=app --json 2>/dev/null || echo "[]")
          if [ "$AFFECTED_APPS" = "[]" ] || [ -z "$AFFECTED_APPS" ]; then
            # Fallback: get all apps if no affected apps found
            AFFECTED_APPS=$(pnpm nx show projects --type=app --json 2>/dev/null || echo "[]")
          fi
          echo "apps=$AFFECTED_APPS" >> $GITHUB_OUTPUT
          echo "Affected apps: $AFFECTED_APPS"

  build:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.affected-apps != '[]'
    strategy:
      matrix:
        app: ${{ fromJson(needs.detect-changes.outputs.affected-apps) }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: |
          if ! pnpm install --frozen-lockfile; then
            echo "Frozen lockfile failed, installing with updated lockfile..."
            pnpm install --no-frozen-lockfile
          fi
      
      - name: Build ${{ matrix.app }}
        run: pnpm nx build ${{ matrix.app }}
      
      - name: Test ${{ matrix.app }}
        run: pnpm nx test ${{ matrix.app }}